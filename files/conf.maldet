#!/bin/bash
#
##
# Linux Malware Detect v1.5
#             (C) 2002-2012, R-fx Networks <proj@r-fx.org>
#             (C) 2012, Ryan MacDonald <ryan@r-fx.org>
# This program may be freely redistributed under the terms of the GNU GPL v2
##
#

##
# [ EMAIL ALERTS ]
##
# Enable or disable e-mai alert system
# [0 = disabled, 1 = enabled]
email_alert=0

# The subject line for e-mail alerts
email_subj="maldet alert from $(hostname)"

# The destination addresses for e-mail alerts
# [ values are comma (,) spaced ]
email_addr="you@domain.com"

# Ignore e-mail alerts for reports in which all hits have been cleaned
# [0 = disabled, 1 = enabled]
email_ignore_clean=0

##
# [ General Options ]
##

# This controls the daily automatic updates of LMD signature files
# and cleaner rules. The signature update process preserves any
# custom signature or cleaner files. It is highly recommended that this
# be enabled as new signatures a released multiple times per-week.
# [0 = disabled, 1 = enabled]
autoupdate_signatures="1"

# This controls the daily automatic updates of the LMD installation.
# The installation update process preserves all configuration options
# along with customer signature and cleaner files. It is highly
# recommended that this be enabled to ensure the latest version and
# features are available.
# [0 = disabled, 1 = enabled]
autoupdate_version="1"

# This controls validating the LMD executable MD5 hash with known
# good upstream hash value. This allows LMD to replace the the
# executable / force a reinstalltion in the event the LMD executable
# is tampered with or corrupted. If you intend to make customizations
# to the LMD executable, you should disable this feature.
# [0 = disabled, 1 = enabled]
autoupdate_version_hashed="1"

##
# [ SCAN OPTIONS ]
##

# The maximum directory depth that the scanner will search
# [ changing this may have an impact on scan performance ]
scan_max_depth=15

# The minimum file size in bytes for a file to be included in
# LMD scans. A value of less than 24b is highly discouraged.
# [ changing this may have an impact on scan performance ]
scan_min_filesize=24

# The maximum file size for a file to be included in scan LMD
# scans. Accepted value formats are b, k, M.
# [ changing this may have an impact on scan performance ]
scan_max_filesize="768k"

# As a design and common use case, LMD typically only scans
# user space paths and as such it makes sense to ignore files
# that are root owned. It is recommended to leave this enabled.
# [ 0 = disabled, 1 = enabled; enabled by default ]
scan_ignore_root="1"

# The maximum byte depth that the scanner will search into
# a files contents; default rules expect a 65536 depth size.
# [ changing this may have an impact on scan performance ]
scan_hexdepth=65536

# Use named pipe (FIFO) for passing file contents hex data instead
# of stdin default; improved performance and greater scanning depth.
# This is highly recommended and works on most systems. The hexfifo
# will be disabled automatically if for any reason it can not be
# successfully utilized.
# [ 0 = disabled, 1 = enabled; enabled by default ]
scan_hexfifo=1

# The maximum byte depth that the scanner will search into a files
# contents when using named pipe (FIFO). Improved performance allows
# for greater scan depth over default scan_hexdepth value.
# [ changing this may have an impact on scan performance ]
scan_hexfifo_depth=524288

# If installed, use ClamAV clamscan binary as default scan engine which
# provides improved scan performance on large file sets. The clamscan
# engine is used in conjunction with native ClamAV signatures updated
# through freshclam along with LMD signatures providing additional
# detection capabilities.
# [ 0 = disabled, 1 = enabled; enabled by default ]
scan_clamscan=1

# Include the scanning of known temporary world-writable
# paths for -a|--al and -r|--recent scan types.
scan_tmpdir_paths="/tmp /var/tmp /dev/shm"

# Allows non-root users to perform scans. This must be enabled when
# using mod_security2 upload scanning or if you want to allow users
# to perform scans. When enabled, this will populate 'pub/' with user
# owned quarantine, session and temporary paths to faciliate scans.
# [ 0 = disabled, 1 = enabled, disabled by default ]
scan_user_access=0

# Process CPU scheduling (nice) priority level for scan operations.
# [ -19 = high prio , 19 = low prio, default = 19 ]
scan_cpunice="19"

##
# [ QUARANTINE OPTIONS ]
##
# The default quarantine action for malware hits
# [0 = alert only, 1 = move to quarantine & alert]
quarantine_hits=0

# Try to clean string based malware injections
# [NOTE: quarantine_hits=1 required]
# [0 = disabled, 1 = clean]
quarantine_clean=1

# The default suspend action for users wih hits
# Cpanel suspend or set shell /bin/false on non-Cpanel
# [NOTE: quarantine_hits=1 required]
# [0 = disabled, 1 = suspend account]
quarantine_suspend_user=0

# The minimum userid value that can be suspended
# [ default = 500 ]
quarantine_suspend_user_minuid=500

##
# [ MONITORING OPTIONS ]
##
# The base number of files that can be watched under a path
# [ maximum file watches = inotify_base_watches*users ]
inotify_base_watches=131072

# The sleep time in seconds between monitor runs to scan files
# that have been created/modified/moved
inotify_sleep=30

# The minimum userid that will be added to path monitoring when
# the USERS option is specified
inotify_minuid=500

# This is the html/web root for users relative to homedir, when
# this option is set, users will only have the webdir monitored
# [ clear option to default monitor entire user homedir ]
inotify_docroot=public_html

# Process CPU scheduling (nice) priority level for monitoring process.
# [ -19 = high prio , 19 = low prio, default = 15 ]
inotify_cpunice=15

##
# [ STATISTICAL ANALYSIS ]
# This is a beta feature and as such should be used with caution.
# Currently, this feature can have a substantially negative impact
# on scan performance, especially with large file sets.
##
# The string length test is used to identify threats based on the
# length of the longest uninterrupted string within a file. This is
# useful as obfuscated code is often stored using encoding methods
# that produce very long strings without spaces (e.g: base64)
# [ string length in characters, default = 150000 ]
string_length_scan="0"		# [ 0 = disabled, 1 = enabled ]
string_length="150000"		# [ max string length ]
